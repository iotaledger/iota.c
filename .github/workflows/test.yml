# Build and Test with different crypto libs and compilers

name: tests
on:
  push:
    branches:
      - production
      - staging
      - dev*
  pull_request:
    branches:
      - production
      - staging
      - dev*
env:
  CTEST_OUTPUT_ON_FAILURE: TRUE

jobs:
  ninja_clang_sodium:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: install requirements
        run: |
          sudo apt update
          sudo apt install -y ninja-build libcurl4-openssl-dev build-essential

      - name: Debug build
        run: |
          cmake --version
          clang --version
          mkdir build && cd build
          cmake -G Ninja -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_PREFIX=$PWD -DCryptoUse=libsodium -DIOTA_ASAN_ENABLED=ON -DIOTA_WALLET_ENABLE=ON ..
          ninja -v && ninja test

      - name: Release build
        run: |
          rm -rf build && sync
          mkdir build && cd build
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_PREFIX=$PWD -DCryptoUse=libsodium -DIOTA_WALLET_ENABLE=ON ..
          ninja && ninja test

  make_gcc_openssl:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: install requirements
        run: |
          sudo apt update
          sudo apt install -y libcurl4-openssl-dev clang-format build-essential

      - name: Debug build
        run: |
          cmake --version
          gcc --version
          mkdir build && cd build
          cmake -DCMAKE_INSTALL_PREFIX=$PWD -DIOTA_TESTS=ON -DIOTA_ASAN_ENABLED=ON -DCryptoUse=openssl ..
          make -j8 && make test

      - name: Release build
        run: |
          rm -rf build && sync
          mkdir build && cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$PWD -DIOTA_TESTS=ON -DCryptoUse=openssl ..
          make -j8 && make test

  make_gcc_mbedtls:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: install requirements
        run: |
          sudo apt update
          sudo apt install -y libcurl4-openssl-dev clang-format build-essential

      - name: Debug build
        run: |
          cmake --version
          gcc --version
          mkdir build && cd build
          cmake -DCMAKE_INSTALL_PREFIX=$PWD -DIOTA_TESTS=ON -DIOTA_ASAN_ENABLED=ON -DCryptoUse=mbedtls ..
          make -j8 && make test

      - name: Release build
        run: |
          rm -rf build && sync
          mkdir build && cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$PWD -DIOTA_TESTS=ON -DCryptoUse=mbedtls ..
          make -j8 && make test
